#!/usr/bin/env python
__doc__="""
A little script to be used in tandem the caffeinate on OSX to prevent
the system from sleeping.  This is basically an infinite loop waiting
for a keyboard interrupt or other signal.

Keith Prussing 2014-02-08

"""
import argparse
import logging
import time

def standard(count):
    "A standard routine to print something to the screen."
    logger = logging.getLogger(__name__ +".standard")
    logger.info("Still alive number {:d}".format(count))
    return count
# end def

def sing_it(count):
    "This routine prints amusing stuff to the screen :-)"
    logger = logging.getLogger(__name__ +".sing_it")
    lyrics = [ \
            "Well, you can tell by the way I use my walk,", \
            "I'm a woman's man: no time to talk.", \
            "Music loud and women warm, I've been kicked around", \
            "Since I was born.", \
            "And now it's all right. it's ok.", \
            "And you may look the other way.", \
            "We can try to understand", \
            "The new york times effect on man.", \
            "", \
            "Whether you're a brother or whether you're a mother,", \
            "You're stayin alive, stayin alive.", \
            "Feel the city breakin and everybody shakin,", \
            "And were stayin alive, stayin alive.", \
            "Ah, ha, ha, ha, stayin alive, stayin alive.", \
            "Ah, ha, ha, ha, stayin alive.", \
            "", \
            "Well now, I get low and I get high,", \
            "And if I can't get either, I really try.", \
            "Got the wings of heaven on my shoes.", \
            "I'm a dancin man and I just can't lose.", \
            "You know it's all right.its ok.", \
            "I'll live to see another day.", \
            "We can try to understand", \
            "The new york times effect on man.", \
            "", \
            "Whether you're a brother or whether you're a mother,", \
            "You're stayin alive, stayin alive.", \
            "Feel the city breakin and everybody shakin,", \
            "And were stayin alive, stayin alive.", \
            "Ah, ha, ha, ha, stayin alive, stayin alive.", \
            "Ah, ha, ha, ha, stayin alive.", \
            "", \
            "Life goin nowhere.somebody help me.", \
            "Somebody help me, yeah.", \
            "Life goin nowhere.somebody help me.", \
            "Somebody help me, yeah. stayin alive.", \
            "", \
            "Well, you can tell by the way I use my walk,", \
            "I'm a woman's man: no time to talk.", \
            "Music loud and women warm,", \
            "I've been kicked around since I was born.", \
            "And now it's all right. it's ok.", \
            "And you may look the other way.", \
            "We can try to understand", \
            "The new york times effect on man.", \
            "", \
            "Whether you're a brother or whether you're a mother,", \
            "You're stayin alive, stayin alive.", \
            "Feel the city breakin and everybody shakin,", \
            "And were stayin alive, stayin alive.", \
            "Ah, ha, ha, ha, stayin alive, stayin alive.", \
            "Ah, ha, ha, ha, stayin alive.", \
            "", \
            "Life goin nowhere.somebody help me.", \
            "Somebody help me, yeah.", \
            "Life goin nowhere.somebody help me, yeah.", \
            "I'm stayin alive." \
        ]
    if count >= len(lyrics):
        lineno = 0
    else:
        lineno = count
    # end if
    logger.info(lyrics[lineno])
    return lineno
# end def sing_it

if __name__ == "__main__":
    parser = argparse.ArgumentParser( \
            description=__doc__, \
            formatter_class=argparse.RawDescriptionHelpFormatter \
        )
    parser.add_argument( \
            "-s", action="store_true", \
            help="This is the option you want ;-)",
        )
    args = parser.parse_args()

    logging.basicConfig( \
            level=logging.INFO, format="%(message)s" \
        )
    logger = logging.getLogger(__name__)

    if args.s:
        f = sing_it
        logger.info("Great choice!  Here we go!")
    else:
        f = standard
    # end if

    count = 0
    try:
        while True:
            count = f(count) +1
            time.sleep(600)
        # end while
    except KeyboardInterrupt:
        logging.info("Really?  Okay fine...")
    except Exception as err:
        logging.info("What was that? {!s}".format(err))
    # end try

# end if

