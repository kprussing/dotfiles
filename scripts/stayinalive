#!/usr/bin/env python
__doc__="""
A little script to be used in tandem the caffeinate on OSX to prevent
the system from sleeping.  This is basically an infinite loop waiting
for a keyboard interrupt or other signal.

Keith Prussing 2014-02-08

"""
import argparse
import logging
import time

def standard(count):
    "A standard routine to print something to the screen."
    logger = logging.getLogger(__name__ +".standard")
    logger.info("Still alive number {:d}".format(count))
    return count
# end def

def sing_it(count):
    "This routine prints amusing stuff to the screen :-)"
    logger = logging.getLogger(__name__ +".sing_it")
    lyrics = [ \
            "I need to write this one..." \
        ]
    if count >= len(lyrics):
        lineno = 0
    else:
        lineno = count
    # end if
    logger.info(lyrics[lineno])
    return lineno
# end def sing_it

if __name__ == "__main__":
    parser = argparse.ArgumentParser( \
            description=__doc__, \
            formatter_class=argparse.RawDescriptionHelpFormatter \
        )
    parser.add_argument( \
            "-s", action="store_true", \
            help="This is the option you want ;-)",
        )
    args = parser.parse_args()

    if args.s:
        f = sing_it
    else:
        f = standard
    # end if

    logging.basicConfig( \
            level=logging.INFO, format="%(message)s" \
        )
    logger = logging.getLogger(__name__)

    count = 0
    try:
        logger.info("Here we go!")
        while True:
            count = f(count) +1
            time.sleep(600)
        # end while
    except KeyboardInterrupt:
        logging.info("Really?  Okay fine...")
    except Exception as err:
        logging.info("What was that? {!s}".format(err))
    # end try

# end if

